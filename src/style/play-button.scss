$red: rgb(240, 65, 69);

$backgroundColor: white; //#
$color: black; //#20c997

$sqrt3: 1.7;
$tg30: 0.58;

$playButtonHeight: 53px; // Должно быть кратно 6, чтобы ровно отображалось
$playButtonWidth: $playButtonHeight * $sqrt3 / 2;
$playButtonColor: $red;

$edgeSize: $playButtonHeight * 5/3;
$hexagonHeight: $edgeSize / $tg30;
$hexagonWidth: $edgeSize * $sqrt3;

$hexagonMobileScale: 0.7;


@keyframes click-scale-animation {
	0%, 100% {
		transform: scale(1);
	}
	50% {
		transform: scale(0.97);
	}
}

@media (max-width: 576px) {
	@keyframes click-scale-animation {
		0%, 100% {
			transform: scale($hexagonMobileScale);
		}
		50% {
			transform: scale($hexagonMobileScale * 0.97);
		}
	}
}

.click-scale-animation {
	animation: click-scale-animation 0.3s ease;
}

#hexagon {
	position: relative;
	width: $hexagonHeight;
	height: $edgeSize;
	background-color: $backgroundColor;
	cursor: pointer;
	margin: $edgeSize/2 + 20px auto;

	@media (max-width: 576px) {
		transform: scale($hexagonMobileScale);
	}

	@media (max-height: 576px) {
		margin: $edgeSize/4 auto $edgeSize/2 auto;
	}
}

#hexagon:before,
#hexagon:after {
	content: "";
	position: absolute;
	width: 0;
	border-left: $hexagonHeight/2 solid transparent;
	border-right: $hexagonHeight/2 solid transparent;
}

#hexagon:before {
	bottom: 99%; // Если сделать 100, то при scale появляется небольшая дыра
	border-bottom: $edgeSize/2 solid $backgroundColor;
}

#hexagon:after {
	top: 99%; // Если сделать 100, то при scale появляется небольшая дыра
	border-top: $edgeSize/2 solid $backgroundColor;
}

.button {
	pointer-events: none;

	position: relative;
	left: $hexagonWidth / 2 - $playButtonWidth / 3;
	top: ($edgeSize - $playButtonHeight) / 2;

	font-size: 0; // Иначе появляется пространство между двумя span

	transform-origin: $playButtonWidth/2 center;

	transition: all 0.3s linear;
	* {
		transition: all 0.3s linear;
	}

	&.pause {
		left: ($hexagonWidth - $playButtonWidth + 2px) / 2;
		top: ($edgeSize - $playButtonHeight - 4px) / 2;

		@media (max-width: 576px) {
			top: ($edgeSize - $playButtonHeight - 6px) / 2;
		}

		transform: rotate(90deg);
	}

	span {
		display: block;
		background-color: transparent;

		&:nth-child(1) {
			box-sizing: border-box;
			border-style: solid;

			&.play {
				width: $playButtonWidth;
				height: $playButtonHeight/2;

				border-width: $playButtonHeight/2 0 0 $playButtonWidth;
				border-color: transparent transparent transparent $playButtonColor;
			}

			&.pause {
				width: $playButtonHeight;
				height: $playButtonHeight/3;

				margin-bottom: $playButtonHeight/3;

				border-width: 0 0 0 $playButtonHeight;
				border-color: transparent transparent transparent $playButtonColor;
			}
		}

		&:nth-child(2) {
			box-sizing: border-box;
			border-style: solid;

			&.play {
				width: $playButtonWidth;
				height: $playButtonHeight/2;

				margin-bottom: $playButtonHeight/4;

				border-width: 0 0 $playButtonHeight/2 $playButtonWidth;
				border-color: transparent transparent transparent $playButtonColor;
			}

			&.pause {
				width: $playButtonHeight;
				height: $playButtonHeight/3;

				border-width: 0 0 0 $playButtonHeight;
				border-color: transparent transparent transparent $playButtonColor;
			}
		}
	}
}
