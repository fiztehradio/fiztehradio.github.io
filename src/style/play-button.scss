// http://csshexagon.com/

$backgroundColor: white;	//#
$color: black;	//#20c997

$sqrt3: 1.73205;
$tg30: 0.57735026919;

$hexagonHeight: 100px;
$edgeSize: $hexagonHeight * $tg30;
$hexagonWidth: $edgeSize * $sqrt3;

#hexagon {
	position: relative;
	width: $hexagonHeight;
	height: $edgeSize;
	background-color: $backgroundColor;
	cursor: pointer;
	margin: $edgeSize/2 + 20px auto;
}

#hexagon:before,
#hexagon:after {
	content: "";
	position: absolute;
	width: 0;
	border-left: $hexagonHeight/2 solid transparent;
	border-right: $hexagonHeight/2 solid transparent;
}

#hexagon:before {
	bottom: 100%;
	border-bottom: $edgeSize/2 solid $backgroundColor;
}

#hexagon:after {
	top: 100%;
	width: 0;
	border-top: $edgeSize/2 solid $backgroundColor;
}

$playButtonWidth: 36px;	// Должно быть кратно 6, чтобы ровно отображалось
$playButtonHeight: $playButtonWidth;
$playButtonColor: #f04244;

* {
	transition: all 0.1s linear;
}

.button {
	position: relative;
	left: ($hexagonWidth - 3 * $playButtonWidth / 4) / 2;
	top: ($edgeSize - $playButtonHeight) / 2;

	font-size: 0;	// Иначе появляется пространство между двумя span

	span {
		display: inline-block;
		background-color: transparent;

		&:nth-child(1) {
			&.play {
				width: $playButtonWidth/2;
				height: $playButtonHeight;

				box-sizing: border-box;
				border-style: solid;
				border-width: $playButtonHeight/4 0 $playButtonHeight/4 $playButtonWidth/2;
				border-color: transparent transparent transparent $playButtonColor;
			}

			&.pause {
				width: $playButtonWidth/2;
				height: $playButtonHeight;

				box-sizing: border-box;
				border-style: solid;
				border-width: 0 0 0 $playButtonWidth/4;
				border-color: transparent transparent transparent $playButtonColor;
			}
		}

		&:nth-child(2) {
			&.play {
				width: $playButtonWidth/2;
				height: $playButtonHeight/2;

				margin-bottom: $playButtonHeight/4;

				box-sizing: border-box;
				border-style: solid;
				border-width: $playButtonHeight/4 0 $playButtonHeight/4 $playButtonWidth/2;
				border-color: transparent transparent transparent $playButtonColor;
			}

			&.pause {
				width: $playButtonWidth/2;
				height: $playButtonHeight;

				box-sizing: border-box;
				border-style: solid;
				border-width: 0 0 0 $playButtonWidth/4;
				border-color: transparent transparent transparent $playButtonColor;
			}
		}
	}
}
